"use strict";(self.webpackChunkquickpay_docs=self.webpackChunkquickpay_docs||[]).push([[858],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6609:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:3},i="Callback",o={unversionedId:"features/callback",id:"features/callback",title:"Callback",description:"The package provides a CallbackMiddleware class which is a PSR-15 Middleware. This",source:"@site/docs/features/callback.md",sourceDirName:"features",slug:"/features/callback",permalink:"/quickpay-docs/docs/features/callback",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"StatusCodes",permalink:"/quickpay-docs/docs/features/types/status-codes"}},p={},c=[{value:"Usage",id:"usage",level:2},{value:"TC API example",id:"tc-api-example",level:3},{value:"Data",id:"data",level:2}],s={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"callback"},"Callback"),(0,r.kt)("p",null,"The package provides a ",(0,r.kt)("inlineCode",{parentName:"p"},"CallbackMiddleware")," class which is a ",(0,r.kt)("a",{parentName:"p",href:"https://www.php-fig.org/psr/psr-15/"},"PSR-15 Middleware"),". This\nmiddleware needs to be added to your project's middleware stack ",(0,r.kt)("strong",{parentName:"p"},"BEFORE")," your custom logic."),(0,r.kt)("p",null,"It will automatically validate requests coming from Quickpay and enrich the request with some key information for you to\nuse in your custom logic."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you are working in a development environment with access limitations make sure to allow requests from this\nIP range: ",(0,r.kt)("strong",{parentName:"p"},"193.162.142.208/28")," to allow callback requests from Quickpay."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},".htaccess example")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"# Quickpay Callback IPs\nRequire ip 193.162.142.208/28\n"))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"TypoConsult\\Quickpay\\Middleware\\CallbackMiddleware")," class to your middleware stack."),(0,r.kt)("h3",{id:"tc-api-example"},"TC API example"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If added to endpoints that are not hit by Quickpay with the Quickpay checksum header, it'll cause every request to fail with a 400 HTTP status code.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\ndeclare(strict_types=1);\n\nnamespace TYPOCONSULT\\TcBase\\Api;\n\nuse TypoConsult\\Quickpay\\Middleware\\CallbackMiddleware;\nuse TYPOCONSULT\\TcApi\\Api\\Routing\\Route;\nuse TYPOCONSULT\\TcApi\\Api\\Routing\\RouteDefinitionsInterface;\nuse TYPOCONSULT\\TcApi\\Exception\\InvalidMiddlewareArgumentException;\nuse TYPOCONSULT\\TcApi\\Exception\\RouteAlreadyDefinedException;\nuse TYPOCONSULT\\TcBase\\Api\\Handlers\\QuickPayCallbackHandler;\n\nclass RouteDefinitions implements RouteDefinitionsInterface\n{\n    /**\n     * @throws InvalidMiddlewareArgumentException\n     * @throws RouteAlreadyDefinedException\n     */\n    public function __invoke(): void\n    {\n        Route::post('/quickpay/callback', new QuickPayCallbackHandler(), [new CallbackMiddleware(QUICKPAY_PRIVATE_KEY)]);\n    }\n}\n\n")),(0,r.kt)("h2",{id:"data"},"Data"),(0,r.kt)("p",null,"The request will then be enriched witha new attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"quickpay")," with parsed data when it reaches your custom logic."),(0,r.kt)("p",null,"It can be fetched with the following function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$request->getAttribute('quickpay');\n")),(0,r.kt)("p",null,"In this quickpay attribute you will receive the following data:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"accepted"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"operationType"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/features/types/operation-types"},"OperationTypes")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"state"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"initial, pending, new, rejected, processed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"statusCode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/features/types/status-codes"},"StatusCodes")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"testMode"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"eg. 'Payment'")))))}d.isMDXComponent=!0}}]);