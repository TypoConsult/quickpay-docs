"use strict";(self.webpackChunkquickpay_docs=self.webpackChunkquickpay_docs||[]).push([[164],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},o=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),d=s(a),c=r,k=d["".concat(u,".").concat(c)]||d[c]||m[c]||l;return a?n.createElement(k,p(p({ref:t},o),{},{components:a})):n.createElement(k,p({ref:t},o))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,p=new Array(l);p[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var s=2;s<l;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1509:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>w,frontMatter:()=>g,metadata:()=>N,toc:()=>v});var n=a(7462),r=a(7294),l=a(3905),p=a(6010),i=a(2389),u=a(7392),s=a(7094),o=a(2466);const m="tabList__CuJ",d="tabItem_LNqP";function c(e){var t,a;const{lazy:l,block:i,defaultValue:c,values:k,groupId:y,className:b}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=k?k:g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),N=(0,u.l)(f,((e,t)=>e.value===t.value));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const h=null===c?c:null!=(t=null!=c?c:null==(a=g.find((e=>e.props.default)))?void 0:a.props.value)?t:g[0].props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:v,setTabGroupChoices:T}=(0,s.U)(),[w,x]=(0,r.useState)(h),I=[],{blockElementScrollPositionUntilNextRender:C}=(0,o.o5)();if(null!=y){const e=v[y];null!=e&&e!==w&&f.some((t=>t.value===e))&&x(e)}const P=e=>{const t=e.currentTarget,a=I.indexOf(t),n=f[a].value;n!==w&&(C(t),x(n),null!=y&&T(y,String(n)))},O=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=I.indexOf(e.currentTarget)+1;a=null!=(n=I[t])?n:I[0];break}case"ArrowLeft":{var r;const t=I.indexOf(e.currentTarget)-1;a=null!=(r=I[t])?r:I[I.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,p.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":i},b)},f.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>I.push(e),onKeyDown:O,onFocus:P,onClick:P},l,{className:(0,p.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function k(e){const t=(0,i.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}const y="tabItem_Ymn6";function b(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",className:(0,p.Z)(y,n),hidden:a},t)}const g={sidebar_position:1},f="Payments",N={unversionedId:"features/services/payments",id:"features/services/payments",title:"Payments",description:"The Client instance provides a payments object to interact directly with Quickpay payments.",source:"@site/docs/features/services/payments.mdx",sourceDirName:"features/services",slug:"/features/services/payments",permalink:"/docs/features/services/payments",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Services",permalink:"/docs/category/services"},next:{title:"Types",permalink:"/docs/category/types"}},h={},v=[{value:"get",id:"get",level:2},{value:"create",id:"create",level:2},{value:"createLink",id:"createlink",level:2},{value:"updateLink",id:"updatelink",level:2},{value:"capture",id:"capture",level:2}],T={toc:v};function w(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"payments"},"Payments"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Client")," instance provides a ",(0,l.kt)("inlineCode",{parentName:"p"},"payments")," object to interact directly with Quickpay payments."),(0,l.kt)("p",null,"The available functions are listed below with descriptions, examples, arguments and expected return values."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Make sure that you have a correct setup with a client based on the ",(0,l.kt)("a",{parentName:"p",href:"/docs/getting-started/usage"},"usage page"))),(0,l.kt)("h2",{id:"get"},"get"),(0,l.kt)("p",null,"Fetch all data for a specific payment"),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(b,{value:"example",label:"Example",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$response = $client->payments->get($id);\n"))),(0,l.kt)(b,{value:"args",label:"Arguments",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"-"))))),(0,l.kt)(b,{value:"return",label:"Return",mdxType:"TabItem"},(0,l.kt)("p",null,"Instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"Psr\\Http\\Message\\ResponseInterface")," with raw data from Quickpay API."))),(0,l.kt)("h2",{id:"create"},"create"),(0,l.kt)("p",null,"Creates a new payment. This is rarely used alone, since it will only create a payment in Quickpay, but without any way\nfor the user to submit payments."),(0,l.kt)("p",null,"Please refer to the ",(0,l.kt)("a",{parentName:"p",href:"/docs/features/services/payments#createlink"},(0,l.kt)("inlineCode",{parentName:"a"},"createLink"))," function below, which will both create\nthe payment and return a link for the user to use for\npayments."),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(b,{value:"example",label:"Example",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$response = $client->payments->create($input);\n"))),(0,l.kt)(b,{value:"args",label:"Arguments",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/features/types/payment-input"},"PaymentInput")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"-"))))),(0,l.kt)(b,{value:"return",label:"Return",mdxType:"TabItem"},(0,l.kt)("p",null,"Instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"Psr\\Http\\Message\\ResponseInterface")," with raw data from Quickpay API."))),(0,l.kt)("h2",{id:"createlink"},"createLink"),(0,l.kt)("p",null,"Creates a new payment and a link to the payment form to be used for paying."),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(b,{value:"example",label:"Example",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$response = $client->payments->createLink($input);\n"))),(0,l.kt)(b,{value:"args",label:"Arguments",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/features/types/payment-link-input"},"PaymentLinkInput")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"-"))))),(0,l.kt)(b,{value:"return",label:"Return",mdxType:"TabItem"},(0,l.kt)("p",null,"Instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"Psr\\Http\\Message\\ResponseInterface")," with raw data from Quickpay API."))),(0,l.kt)("h2",{id:"updatelink"},"updateLink"),(0,l.kt)("p",null,"Updates an existing payment link."),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(b,{value:"example",label:"Example",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$response = $client->payments->updateLink($id, $input);\n"))),(0,l.kt)(b,{value:"args",label:"Arguments",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/features/types/payment-link-input"},"PaymentLinkInput")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"-"))))),(0,l.kt)(b,{value:"return",label:"Return",mdxType:"TabItem"},(0,l.kt)("p",null,"Instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"Psr\\Http\\Message\\ResponseInterface")," with raw data from Quickpay API."))),(0,l.kt)("h2",{id:"capture"},"capture"),(0,l.kt)("p",null,"Captures a partial or full amount of an existing payment."),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(b,{value:"example",label:"Example",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$response = $client->payments->capture($id, $amount);\n"))),(0,l.kt)(b,{value:"args",label:"Arguments",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"default"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"If not provided, it will attempt to capture the full amount of the payment"))))),(0,l.kt)(b,{value:"return",label:"Return",mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"On success")),(0,l.kt)("p",null,"Instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"Psr\\Http\\Message\\ResponseInterface")," with raw data from Quickpay API."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"On failure")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"null")))))}w.isMDXComponent=!0}}]);